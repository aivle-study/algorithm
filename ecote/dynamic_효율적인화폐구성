## 입력 조건
# 1. 첫째 줄에 N, M 이 주어진다. (1 ≤ N ≤ 100. 1 ≤ M ≤ 10,000)
# 2. 이후 N 개의 줄에는 각 화폐의 가치가 주어진다. (1 ≤ 화폐 가치 ≤ 10,000 :자연수)
## 출력 조건
# 1. 첫째 줄에 M 원을 만들기 위한 최소한의 화폐 개수를 출력한다.
# 2. 불가능할 때는 -1 을 출력한다.

## 화폐 단위별로 loop를 돌면서 DP 테이블을 업데이트 시켜주는 방식
## 점화식
# 1. a(i-k) 만드는 방법 존재하는 경우, a(i) = min(a(i), a(i-k)+1)
# 2. a(i-k) 만드는 방법 존재하지 않는 경우, a(i) = 10,001

n, m = map(int, input().split())
money = []
for i in range(n):
    money.append(int(input()))

# i 원을 만들기 위해 필요한 최소 화폐 개수
dt = [10001] * (m+1)

dt[0] = 0
for i in range(n):
    for j in range(money[i], m+1):
        if dt[j - money[i]] != 10001: # (i - k)원을 만드는 방법이 존재하는 경우 : k는 화폐 단위
            dt[j] = min(dt[j], dt[j-money[i]]+1) # 화폐 단위마다 갱신

if dt[m] == 10001:
    print(-1)
else:
    print(dt[m])